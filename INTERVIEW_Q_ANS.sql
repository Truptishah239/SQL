/****** Script for SelectTopNRows command from SSMS  ******/

-- get mobile number first, if not available then landline number

CREATE TABLE STUDENT
( ID INT,
NAME VARCHAR(20),
GENDER VARCHAR (2)
)

CREATE TABLE PARENT
( ID INT,
PHONE VARCHAR(20),
TYPE VARCHAR(2)
)

INSERT INTO STUDENT VALUES (1,'TRUPTI','F'), (2,'AAROHI','F'),(3,'RIHIT','M'), (4,'DHIRAJ','M')
INSERT INTO PARENT VALUES (1,'9898989898','M'), (2,'9898989898','M'),(3,'98989898','M'), (3,'121212121','L'),(4,'98989898','M'), (4,'121212121','L')
SELECT * FROM STUDENT;
SELECT * FROM PARENT

SELECT S.*, P.PHONE  FROM STUDENT S
LEFT JOIN
(SELECT * , ROW_NUMBER() OVER(PARTITION BY ID ORDER BY TYPE DESC) AS ROW_NUM FROM PARENT) AS P
ON S.ID =P.ID
WHERE ROW_NUM = 1;


-- SINGLE STATEMENT TO UPDATE ALL NULL VALUE IN THE TABLE/ROWCOUNT/ SUM WITH NULL
IF EXISTS(SELECT 1 FROM SYS.TABLES WHERE NAME='OPTUM_P1')
BEGIN
DROP TABLE OPTUM_P1
END

CREATE TABLE OPTUM_P1
(
 A INT,
 B   INT
)

INSERT INTO OPTUM_P1 VALUES(1,2),(2,2),(3,NULL),(4,4),(3,4),(4,5),(2,6),(5,7),(NULL,NULL),(NULL,NULL)
SELECT * FROM OPTUM_P1;

-- WHY IS THE OUPTUT 
SELECT SUM(A) ---24
FROM OPTUM_P1
WHERE A IS NOT NULL

SELECT SUM(B) ---30
FROM OPTUM_P1
WHERE B IS NOT NULL

SELECT SUM(A+B)
FROM OPTUM_P1;

--SINGLE STATEMENT TO UPDATE ALL NULL VALUE
UPDATE OPTUM_P1
SET A = CASE WHEN A IS NULL THEN 10 ELSE A END,
    B = CASE WHEN B IS NULL THEN 10 ELSE B END
WHERE A IS NULL OR B IS NULL
-- ROWCOUNT - SHOWS AFFECTED ROWS
SELECT @@ROWCOUNT;

-- CHECK THE TABLE AGAIN
SELECT * FROM OPTUM_P1;



--Replace multiple comma into one

declare @Input varchar(100) = 'A,,,B,,,,C,,,D,,,E,,,F,G,,,,,';
SELECT REPLACE(replace(REPLACE(@Input, ',', '.,'), ',.', ''), '.,', ',')

--- what is the output?

Declare @source TABLE (ID int)
Insert @source values(1),(1)
select * from @source;

declare @dest TABLE (ID INT)	

MERGE @dest as D
	USING @source as S on	D.ID =S.ID
	WHEN MATCHED THEN UPDATE SET D.ID = S.ID
	WHEN NOT MATCHED BY TARGET THEN INSERT (ID) VALUES(S.ID); 

SELECT * FROM @dest;


-- get occurance 
DECLARE @NAME VARCHAR(20)= 'SSUSAss'
SELECT (len(@Name)-len(REPLACE(@NAME, 'S','')))

-- get the attendance
DECLARE @ATTENDANCE TABLE (EMP INT, PRESENT VARCHAR(20))
INSERT @ATTENDANCE VALUES(1, '2,3,4'), (2, '2,3,4,5,6'), (3, '2,3,4,5,6,7,8')
SELECT * FROM @ATTENDANCE;

SELECT EMP, 
(LEN(PRESENT) - LEN(REPLACE(PRESENT,',', '')))+1 AS 'PRESENT'
FROM @ATTENDANCE;


-- SWAP THE COLUMN NAME
DECLARE @LETTERS TABLE (Id INT, NAME VARCHAR(20))
INSERT @LETTERS VALUES (1,'AA'), (2, 'BB'),(3, 'CC'),(4,'DD')

SELECT * FROM @LETTERS;

UPDATE @LETTERS SET Id =NAME, NAME = Id;

SELECT * FROM @LETTERS;

-- GENERATE 1 TO 100 USING cte
DECLARE @I INT = 100;
WITH CTE AS 
(
SELECT 1 AS ID
UNION ALL
SELECT ID+1
FROM CTE WHERE ID <@I
)

SELECT * FROM CTE















